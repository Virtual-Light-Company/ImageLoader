#
# Makefile for the Image Decoder shared library
# Compile this with the GCC compiler
#
#        make -f makefile.unix
#
# This will not run standalone. It assumes that at least the PROJECT file has
# been called in order to create the JNI header files.
#
# This will produce a library, image_decode.<version>.so
#
# maintainer: Justin Couch

# source files:
SRCS = common.c \
       decode_image.c \
       readppm.c \
       readtiff.c \
       readtarga.c \
       readbmp.c \
       readjpeg.c \
       readpng.c

OBJS = common.o \
       decode_image.o \
       readppm.o \
       readtiff.o \
       readtarga.o \
       readbmp.o \
       readjpeg.o \
       readpng.o

CC=gcc
RM=rm -f
DECODE_LIB=image_decode.${VERSION}.so

# Optimize for speed
CFLAGS = -O2 -Izlib

all: $(DECODE_LIB)

$(DECODE_LIB): $(OBJS)
	$(CC) -LD -Fe$@ $(OBJS) zlib.lib libpng.lib libjpeg.lib libtiff.lib

%.o : %.c
	$(CC) -c $<

clean:
	$(RM) *.o

# dependencies
common.o: common.c decode_image.h vlc_net_content_image_ImageDecoder.h
decode_image.o: decode_image.c decode_image.h vlc_net_content_image_ImageDecoder.h
readppm.o: readppm.c decode_image.h vlc_net_content_image_ImageDecoder.h
readtiff.o: readtiff.c decode_image.h vlc_net_content_image_ImageDecoder.h
readtarga.o: readtarga.c decode_image.h vlc_net_content_image_ImageDecoder.h
readbmp.o: readbmp.c decode_image.h vlc_net_content_image_ImageDecoder.h
readjpeg.o: readjpeg.c decode_image.h vlc_net_content_image_ImageDecoder.h
readpng.o: readpng.c decode_image.h vlc_net_content_image_ImageDecoder.h
